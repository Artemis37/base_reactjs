{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Downloads\\\\ClientApp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom';\nimport { useEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Toast } from 'primereact';\nimport { setToast, setConfirm } from './store/reducer/notify';\nimport PublicLayout from './layout/PublicLayout';\nimport * as SecurityUtils from './utils/security';\nimport Login from './pages/Login';\nimport './css/all.scss';\nimport Loading from './pages/Loading';\nimport AccessDenied from './pages/AccessDenied';\nimport store from './store/store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const loading = useSelector(state => state.loading);\n  const [visible, setVisible] = useState(false);\n  const [confirmation, setConfirmation] = useState({\n    action: null,\n    body: ''\n  });\n  const toast = useRef();\n\n  const toggle = () => setVisible(!visible);\n\n  useEffect(() => {\n    store.dispatch(setToast(data => toast.current.show({\n      severity: data.type,\n      summary: data.message,\n      detail: '',\n      life: 800\n    })));\n    store.dispatch(setConfirm(data => {\n      toggle();\n      if (data) setConfirmation(data);\n    })); // userProcessor.getUserInfo()\n    // userProcessor.getUserActions()\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      ref: toast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/logout\",\n        exact: true,\n        render: () => {\n          SecurityUtils.removeToken();\n          localStorage.clear();\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            from: \"/logout\",\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 22\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/accessDenied\",\n        component: AccessDenied\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        component: Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        component: PublicLayout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"6MuCxuMBt2hdaMRrZvMmmKR88Eo=\", false, function () {\n  return [useSelector];\n});\n\n_c = App;\nexport default _c2 = withRouter(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["Redirect","Route","Switch","withRouter","useEffect","useRef","useState","useSelector","Toast","setToast","setConfirm","PublicLayout","SecurityUtils","Login","Loading","AccessDenied","store","App","loading","state","visible","setVisible","confirmation","setConfirmation","action","body","toast","toggle","dispatch","data","current","show","severity","type","summary","message","detail","life","removeToken","localStorage","clear"],"sources":["C:/Users/DELL/Downloads/ClientApp/src/App.js"],"sourcesContent":["import { Redirect, Route, Switch, withRouter } from 'react-router-dom'\nimport { useEffect, useRef, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Toast } from 'primereact'\nimport { setToast, setConfirm } from './store/reducer/notify'\nimport PublicLayout from './layout/PublicLayout'\nimport * as SecurityUtils from './utils/security'\nimport Login from './pages/Login'\nimport './css/all.scss'\nimport Loading from './pages/Loading'\nimport AccessDenied from './pages/AccessDenied'\nimport store from './store/store'\n\nfunction App() {\n  const loading = useSelector((state) => state.loading)\n  const [visible, setVisible] = useState(false)\n  const [confirmation, setConfirmation] = useState({ action: null, body: '' })\n  const toast = useRef()\n  const toggle = () => setVisible(!visible)\n\n  useEffect(() => {\n    store.dispatch(\n      setToast((data) =>\n        toast.current.show({\n          severity: data.type,\n          summary: data.message,\n          detail: '',\n          life: 800,\n        }),\n      ),\n    )\n\n    store.dispatch(\n      setConfirm((data) => {\n        toggle()\n        if (data) setConfirmation(data)\n      }),\n    )\n\n    // userProcessor.getUserInfo()\n    // userProcessor.getUserActions()\n  }, [])\n\n  return (\n    <>\n      <Toast ref={toast} />\n      {/* <Confirmation\n        visible={visible}\n        toggle={toggle}\n        onClick={(confirm) => {\n          if (confirm && confirmation.action) {\n            confirmation.action()\n          }\n          toggle()\n        }}\n        header=\"Xác nhận\"\n        body={confirmation.body}\n      /> */}\n\n      {loading ? (\n        <Loading />\n      ) : (\n        <Switch>\n          <Route\n            path=\"/logout\"\n            exact\n            render={() => {\n              SecurityUtils.removeToken()\n              localStorage.clear()\n              return <Redirect from=\"/logout\" to=\"/login\" />\n            }}\n          />\n          <Route path=\"/accessDenied\" component={AccessDenied} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/\" component={PublicLayout} />\n        </Switch>\n      )}\n    </>\n  )\n}\n\nexport default withRouter(App)\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,KAAnB,EAA0BC,MAA1B,EAAkCC,UAAlC,QAAoD,kBAApD;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,wBAArC;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAO,KAAKC,aAAZ,MAA+B,kBAA/B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAO,gBAAP;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,KAAP,MAAkB,eAAlB;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAMC,OAAO,GAAGX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACD,OAAlB,CAA3B;EACA,MAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC;IAAEkB,MAAM,EAAE,IAAV;IAAgBC,IAAI,EAAE;EAAtB,CAAD,CAAhD;EACA,MAAMC,KAAK,GAAGrB,MAAM,EAApB;;EACA,MAAMsB,MAAM,GAAG,MAAMN,UAAU,CAAC,CAACD,OAAF,CAA/B;;EAEAhB,SAAS,CAAC,MAAM;IACdY,KAAK,CAACY,QAAN,CACEnB,QAAQ,CAAEoB,IAAD,IACPH,KAAK,CAACI,OAAN,CAAcC,IAAd,CAAmB;MACjBC,QAAQ,EAAEH,IAAI,CAACI,IADE;MAEjBC,OAAO,EAAEL,IAAI,CAACM,OAFG;MAGjBC,MAAM,EAAE,EAHS;MAIjBC,IAAI,EAAE;IAJW,CAAnB,CADM,CADV;IAWArB,KAAK,CAACY,QAAN,CACElB,UAAU,CAAEmB,IAAD,IAAU;MACnBF,MAAM;MACN,IAAIE,IAAJ,EAAUN,eAAe,CAACM,IAAD,CAAf;IACX,CAHS,CADZ,EAZc,CAmBd;IACA;EACD,CArBQ,EAqBN,EArBM,CAAT;EAuBA,oBACE;IAAA,wBACE,QAAC,KAAD;MAAO,GAAG,EAAEH;IAAZ;MAAA;MAAA;MAAA;IAAA,QADF,EAeGR,OAAO,gBACN,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QADM,gBAGN,QAAC,MAAD;MAAA,wBACE,QAAC,KAAD;QACE,IAAI,EAAC,SADP;QAEE,KAAK,MAFP;QAGE,MAAM,EAAE,MAAM;UACZN,aAAa,CAAC0B,WAAd;UACAC,YAAY,CAACC,KAAb;UACA,oBAAO,QAAC,QAAD;YAAU,IAAI,EAAC,SAAf;YAAyB,EAAE,EAAC;UAA5B;YAAA;YAAA;YAAA;UAAA,QAAP;QACD;MAPH;QAAA;QAAA;QAAA;MAAA,QADF,eAUE,QAAC,KAAD;QAAO,IAAI,EAAC,eAAZ;QAA4B,SAAS,EAAEzB;MAAvC;QAAA;QAAA;QAAA;MAAA,QAVF,eAWE,QAAC,KAAD;QAAO,IAAI,EAAC,QAAZ;QAAqB,SAAS,EAAEF;MAAhC;QAAA;QAAA;QAAA;MAAA,QAXF,eAYE,QAAC,KAAD;QAAO,IAAI,EAAC,GAAZ;QAAgB,SAAS,EAAEF;MAA3B;QAAA;QAAA;QAAA;MAAA,QAZF;IAAA;MAAA;MAAA;MAAA;IAAA,QAlBJ;EAAA,gBADF;AAoCD;;GAlEQM,G;UACSV,W;;;KADTU,G;AAoET,qBAAed,UAAU,CAACc,GAAD,CAAzB"},"metadata":{},"sourceType":"module"}