{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Downloads\\\\ClientApp\\\\src\\\\pages\\\\Role.js\";\nimport { withRouter } from 'react-router-dom';\nimport roleProcessor from '../processor/roleProcessor';\nimport Crud from '../components/form/Crud';\nimport RoleTree from '../components/form/RoleTree';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Role() {\n  const moduleName = 'quyền';\n  const processor = roleProcessor;\n  const column = [{\n    value: 'name',\n    name: 'Tên',\n    sortable: true\n  }];\n\n  const savePermission = async (id, keys) => {\n    await roleProcessor.updateRolePermission(id, keys);\n  };\n\n  const config = {\n    fields: ['name'],\n    maxLength: {\n      userName: 20\n    },\n    minLength: {\n      userName: 4\n    },\n    name: {\n      name: 'Tên'\n    },\n    disable: oneData => !oneData.id ? [] : ['name']\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Crud, {\n      processor: processor,\n      moduleName: moduleName,\n      column: column,\n      config: config,\n      chucNang: data => /*#__PURE__*/_jsxDEV(RoleTree, {\n        id: data.id,\n        onSave: savePermission\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 29\n      }, this),\n      canEdit: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = Role;\nexport default _c2 = withRouter(Role);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Role\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["withRouter","roleProcessor","Crud","RoleTree","Role","moduleName","processor","column","value","name","sortable","savePermission","id","keys","updateRolePermission","config","fields","maxLength","userName","minLength","disable","oneData","data"],"sources":["C:/Users/DELL/Downloads/ClientApp/src/pages/Role.js"],"sourcesContent":["import { withRouter } from 'react-router-dom'\nimport roleProcessor from '../processor/roleProcessor'\nimport Crud from '../components/form/Crud'\nimport RoleTree from '../components/form/RoleTree'\n\nfunction Role() {\n  const moduleName = 'quyền'\n  const processor = roleProcessor\n  const column = [{ value: 'name', name: 'Tên', sortable: true }]\n  const savePermission = async (id, keys) => {\n    await roleProcessor.updateRolePermission(id, keys)\n  }\n\n  const config = {\n    fields: ['name'],\n    maxLength: { userName: 20 },\n    minLength: { userName: 4 },\n    name: {\n      name: 'Tên',\n    },\n    disable: (oneData) => (!oneData.id ? [] : ['name']),\n  }\n\n  return (\n    <>\n      <Crud\n        processor={processor}\n        moduleName={moduleName}\n        column={column}\n        config={config}\n        chucNang={(data) => <RoleTree id={data.id} onSave={savePermission} />}\n        canEdit={false}\n      />\n    </>\n  )\n}\n\nexport default withRouter(Role)\n"],"mappings":";AAAA,SAASA,UAAT,QAA2B,kBAA3B;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,QAAP,MAAqB,6BAArB;;;;AAEA,SAASC,IAAT,GAAgB;EACd,MAAMC,UAAU,GAAG,OAAnB;EACA,MAAMC,SAAS,GAAGL,aAAlB;EACA,MAAMM,MAAM,GAAG,CAAC;IAAEC,KAAK,EAAE,MAAT;IAAiBC,IAAI,EAAE,KAAvB;IAA8BC,QAAQ,EAAE;EAAxC,CAAD,CAAf;;EACA,MAAMC,cAAc,GAAG,OAAOC,EAAP,EAAWC,IAAX,KAAoB;IACzC,MAAMZ,aAAa,CAACa,oBAAd,CAAmCF,EAAnC,EAAuCC,IAAvC,CAAN;EACD,CAFD;;EAIA,MAAME,MAAM,GAAG;IACbC,MAAM,EAAE,CAAC,MAAD,CADK;IAEbC,SAAS,EAAE;MAAEC,QAAQ,EAAE;IAAZ,CAFE;IAGbC,SAAS,EAAE;MAAED,QAAQ,EAAE;IAAZ,CAHE;IAIbT,IAAI,EAAE;MACJA,IAAI,EAAE;IADF,CAJO;IAObW,OAAO,EAAGC,OAAD,IAAc,CAACA,OAAO,CAACT,EAAT,GAAc,EAAd,GAAmB,CAAC,MAAD;EAP7B,CAAf;EAUA,oBACE;IAAA,uBACE,QAAC,IAAD;MACE,SAAS,EAAEN,SADb;MAEE,UAAU,EAAED,UAFd;MAGE,MAAM,EAAEE,MAHV;MAIE,MAAM,EAAEQ,MAJV;MAKE,QAAQ,EAAGO,IAAD,iBAAU,QAAC,QAAD;QAAU,EAAE,EAAEA,IAAI,CAACV,EAAnB;QAAuB,MAAM,EAAED;MAA/B;QAAA;QAAA;QAAA;MAAA,QALtB;MAME,OAAO,EAAE;IANX;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAYD;;KA9BQP,I;AAgCT,qBAAeJ,UAAU,CAACI,IAAD,CAAzB"},"metadata":{},"sourceType":"module"}