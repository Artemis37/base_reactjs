{"ast":null,"code":"import apis from '../apis/apis';\nimport store from '../store/store';\nimport { setToken } from '../utils/security';\nimport history from '../history';\nimport { isLoading, isNotLoading } from '../store/reducer/loading';\nconst userProcessor = {};\nuserProcessor.getByTruong = async () => {\n  const rs = await apis.User.GetAllTruongUser({});\n  return rs.isSuccess ? rs.data : [];\n};\nuserProcessor.getByKhoaThi = async () => {\n  const rs = await apis.User.GetAll({});\n  return rs.isSuccess ? rs.data : [];\n};\nuserProcessor.login = async data => {\n  const rs = await apis.User.Login({\n    method: 'post',\n    data,\n    auth: false\n  });\n  if (!rs.isSuccess) {\n    return rs;\n  }\n  setToken(rs.data.token);\n  const link = await userProcessor.getUserActions();\n  await userProcessor.getUserInfo();\n  history.push(!!history.location.state && history.location.state[0] !== '/login' ? history.location.state[0] : link);\n  store.dispatch(isNotLoading());\n  return rs;\n};\nuserProcessor.getUserInfo = async () => {\n  const rs = await apis.User.UserInfo({});\n  if (rs.isSuccess) store.dispatch(setUserInfo(rs.data));\n};\nuserProcessor.resetPassword = async id => {\n  const rs = await apis.User.ResetPassword({\n    param: `/${id}`,\n    method: 'post',\n    responseType: 'text'\n  });\n  return rs;\n};\nuserProcessor.getUserActions = async () => {\n  store.dispatch(isLoading());\n  const rs = await apis.User.Permission({});\n  if (rs.isSuccess) store.dispatch(setActions(rs.data));\n  store.dispatch(isNotLoading());\n  return '/';\n};\nuserProcessor.getByPermission = async code => {\n  const rs = await apis.User.GetByPermission({\n    param: `/${code}`\n  });\n  return rs.isSuccess ? rs.data : [];\n};\nuserProcessor.getAll = async () => {\n  const rs = await apis.User.GetAll({});\n  return rs.isSuccess ? rs.data : [];\n};\nuserProcessor.changePassword = async data => {\n  const rs = await apis.User.ChangePassword({\n    method: 'post',\n    responseType: 'text',\n    data\n  });\n  return rs;\n};\nuserProcessor.upsert = async data => {\n  let rs;\n  if (data.id) {\n    rs = await apis.User.Update({\n      method: 'post',\n      responseType: 'text',\n      data\n    });\n  } else {\n    rs = await apis.User.Create({\n      method: 'post',\n      responseType: 'text',\n      data\n    });\n  }\n  return rs;\n};\nuserProcessor.delete = async id => {\n  const rs = await apis.User.Delete({\n    method: 'post',\n    responseType: 'text',\n    param: `/${id}`\n  });\n  return rs;\n};\nexport default userProcessor;","map":{"version":3,"names":["apis","store","setToken","history","isLoading","isNotLoading","userProcessor","getByTruong","rs","User","GetAllTruongUser","isSuccess","data","getByKhoaThi","GetAll","login","Login","method","auth","token","link","getUserActions","getUserInfo","push","location","state","dispatch","UserInfo","setUserInfo","resetPassword","id","ResetPassword","param","responseType","Permission","setActions","getByPermission","code","GetByPermission","getAll","changePassword","ChangePassword","upsert","Update","Create","delete","Delete"],"sources":["C:/Users/NoMin/OneDrive/Desktop/base_reactjs/src/processor/userProcessor.js"],"sourcesContent":["import apis from '../apis/apis'\r\nimport store from '../store/store'\r\nimport { setToken } from '../utils/security'\r\nimport history from '../history'\r\nimport { isLoading, isNotLoading } from '../store/reducer/loading'\r\n\r\nconst userProcessor = {}\r\nuserProcessor.getByTruong = async () => {\r\n  const rs = await apis.User.GetAllTruongUser({})\r\n  return rs.isSuccess ? rs.data : []\r\n}\r\nuserProcessor.getByKhoaThi = async () => {\r\n  const rs = await apis.User.GetAll({})\r\n  return rs.isSuccess ? rs.data : []\r\n}\r\nuserProcessor.login = async (data) => {\r\n  const rs = await apis.User.Login({\r\n    method: 'post',\r\n    data,\r\n    auth: false,\r\n  })\r\n  if (!rs.isSuccess) {\r\n    return rs\r\n  }\r\n  setToken(rs.data.token)\r\n  const link = await userProcessor.getUserActions()\r\n  await userProcessor.getUserInfo()\r\n  history.push(\r\n    !!history.location.state && history.location.state[0] !== '/login'\r\n      ? history.location.state[0]\r\n      : link,\r\n  )\r\n  store.dispatch(isNotLoading())\r\n  return rs\r\n}\r\n\r\nuserProcessor.getUserInfo = async () => {\r\n  const rs = await apis.User.UserInfo({})\r\n  if (rs.isSuccess) store.dispatch(setUserInfo(rs.data))\r\n}\r\n\r\nuserProcessor.resetPassword = async (id) => {\r\n  const rs = await apis.User.ResetPassword({\r\n    param: `/${id}`,\r\n    method: 'post',\r\n    responseType: 'text',\r\n  })\r\n  return rs\r\n}\r\n\r\nuserProcessor.getUserActions = async () => {\r\n  store.dispatch(isLoading())\r\n  const rs = await apis.User.Permission({})\r\n  if (rs.isSuccess) store.dispatch(setActions(rs.data))\r\n  store.dispatch(isNotLoading())\r\n  return '/'\r\n}\r\n\r\nuserProcessor.getByPermission = async (code) => {\r\n  const rs = await apis.User.GetByPermission({ param: `/${code}` })\r\n  return rs.isSuccess ? rs.data : []\r\n}\r\nuserProcessor.getAll = async () => {\r\n  const rs = await apis.User.GetAll({})\r\n  return rs.isSuccess ? rs.data : []\r\n}\r\n\r\nuserProcessor.changePassword = async (data) => {\r\n  const rs = await apis.User.ChangePassword({ method: 'post', responseType: 'text', data })\r\n  return rs\r\n}\r\n\r\nuserProcessor.upsert = async (data) => {\r\n  let rs\r\n  if (data.id) {\r\n    rs = await apis.User.Update({ method: 'post', responseType: 'text', data })\r\n  } else {\r\n    rs = await apis.User.Create({ method: 'post', responseType: 'text', data })\r\n  }\r\n  return rs\r\n}\r\n\r\nuserProcessor.delete = async (id) => {\r\n  const rs = await apis.User.Delete({ method: 'post', responseType: 'text', param: `/${id}` })\r\n  return rs\r\n}\r\n\r\nexport default userProcessor\r\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,cAAc;AAC/B,OAAOC,KAAK,MAAM,gBAAgB;AAClC,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,OAAOC,OAAO,MAAM,YAAY;AAChC,SAASC,SAAS,EAAEC,YAAY,QAAQ,0BAA0B;AAElE,MAAMC,aAAa,GAAG,CAAC,CAAC;AACxBA,aAAa,CAACC,WAAW,GAAG,YAAY;EACtC,MAAMC,EAAE,GAAG,MAAMR,IAAI,CAACS,IAAI,CAACC,gBAAgB,CAAC,CAAC,CAAC,CAAC;EAC/C,OAAOF,EAAE,CAACG,SAAS,GAAGH,EAAE,CAACI,IAAI,GAAG,EAAE;AACpC,CAAC;AACDN,aAAa,CAACO,YAAY,GAAG,YAAY;EACvC,MAAML,EAAE,GAAG,MAAMR,IAAI,CAACS,IAAI,CAACK,MAAM,CAAC,CAAC,CAAC,CAAC;EACrC,OAAON,EAAE,CAACG,SAAS,GAAGH,EAAE,CAACI,IAAI,GAAG,EAAE;AACpC,CAAC;AACDN,aAAa,CAACS,KAAK,GAAG,MAAOH,IAAI,IAAK;EACpC,MAAMJ,EAAE,GAAG,MAAMR,IAAI,CAACS,IAAI,CAACO,KAAK,CAAC;IAC/BC,MAAM,EAAE,MAAM;IACdL,IAAI;IACJM,IAAI,EAAE;EACR,CAAC,CAAC;EACF,IAAI,CAACV,EAAE,CAACG,SAAS,EAAE;IACjB,OAAOH,EAAE;EACX;EACAN,QAAQ,CAACM,EAAE,CAACI,IAAI,CAACO,KAAK,CAAC;EACvB,MAAMC,IAAI,GAAG,MAAMd,aAAa,CAACe,cAAc,CAAC,CAAC;EACjD,MAAMf,aAAa,CAACgB,WAAW,CAAC,CAAC;EACjCnB,OAAO,CAACoB,IAAI,CACV,CAAC,CAACpB,OAAO,CAACqB,QAAQ,CAACC,KAAK,IAAItB,OAAO,CAACqB,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,KAAK,QAAQ,GAC9DtB,OAAO,CAACqB,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,GACzBL,IACN,CAAC;EACDnB,KAAK,CAACyB,QAAQ,CAACrB,YAAY,CAAC,CAAC,CAAC;EAC9B,OAAOG,EAAE;AACX,CAAC;AAEDF,aAAa,CAACgB,WAAW,GAAG,YAAY;EACtC,MAAMd,EAAE,GAAG,MAAMR,IAAI,CAACS,IAAI,CAACkB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACvC,IAAInB,EAAE,CAACG,SAAS,EAAEV,KAAK,CAACyB,QAAQ,CAACE,WAAW,CAACpB,EAAE,CAACI,IAAI,CAAC,CAAC;AACxD,CAAC;AAEDN,aAAa,CAACuB,aAAa,GAAG,MAAOC,EAAE,IAAK;EAC1C,MAAMtB,EAAE,GAAG,MAAMR,IAAI,CAACS,IAAI,CAACsB,aAAa,CAAC;IACvCC,KAAK,EAAG,IAAGF,EAAG,EAAC;IACfb,MAAM,EAAE,MAAM;IACdgB,YAAY,EAAE;EAChB,CAAC,CAAC;EACF,OAAOzB,EAAE;AACX,CAAC;AAEDF,aAAa,CAACe,cAAc,GAAG,YAAY;EACzCpB,KAAK,CAACyB,QAAQ,CAACtB,SAAS,CAAC,CAAC,CAAC;EAC3B,MAAMI,EAAE,GAAG,MAAMR,IAAI,CAACS,IAAI,CAACyB,UAAU,CAAC,CAAC,CAAC,CAAC;EACzC,IAAI1B,EAAE,CAACG,SAAS,EAAEV,KAAK,CAACyB,QAAQ,CAACS,UAAU,CAAC3B,EAAE,CAACI,IAAI,CAAC,CAAC;EACrDX,KAAK,CAACyB,QAAQ,CAACrB,YAAY,CAAC,CAAC,CAAC;EAC9B,OAAO,GAAG;AACZ,CAAC;AAEDC,aAAa,CAAC8B,eAAe,GAAG,MAAOC,IAAI,IAAK;EAC9C,MAAM7B,EAAE,GAAG,MAAMR,IAAI,CAACS,IAAI,CAAC6B,eAAe,CAAC;IAAEN,KAAK,EAAG,IAAGK,IAAK;EAAE,CAAC,CAAC;EACjE,OAAO7B,EAAE,CAACG,SAAS,GAAGH,EAAE,CAACI,IAAI,GAAG,EAAE;AACpC,CAAC;AACDN,aAAa,CAACiC,MAAM,GAAG,YAAY;EACjC,MAAM/B,EAAE,GAAG,MAAMR,IAAI,CAACS,IAAI,CAACK,MAAM,CAAC,CAAC,CAAC,CAAC;EACrC,OAAON,EAAE,CAACG,SAAS,GAAGH,EAAE,CAACI,IAAI,GAAG,EAAE;AACpC,CAAC;AAEDN,aAAa,CAACkC,cAAc,GAAG,MAAO5B,IAAI,IAAK;EAC7C,MAAMJ,EAAE,GAAG,MAAMR,IAAI,CAACS,IAAI,CAACgC,cAAc,CAAC;IAAExB,MAAM,EAAE,MAAM;IAAEgB,YAAY,EAAE,MAAM;IAAErB;EAAK,CAAC,CAAC;EACzF,OAAOJ,EAAE;AACX,CAAC;AAEDF,aAAa,CAACoC,MAAM,GAAG,MAAO9B,IAAI,IAAK;EACrC,IAAIJ,EAAE;EACN,IAAII,IAAI,CAACkB,EAAE,EAAE;IACXtB,EAAE,GAAG,MAAMR,IAAI,CAACS,IAAI,CAACkC,MAAM,CAAC;MAAE1B,MAAM,EAAE,MAAM;MAAEgB,YAAY,EAAE,MAAM;MAAErB;IAAK,CAAC,CAAC;EAC7E,CAAC,MAAM;IACLJ,EAAE,GAAG,MAAMR,IAAI,CAACS,IAAI,CAACmC,MAAM,CAAC;MAAE3B,MAAM,EAAE,MAAM;MAAEgB,YAAY,EAAE,MAAM;MAAErB;IAAK,CAAC,CAAC;EAC7E;EACA,OAAOJ,EAAE;AACX,CAAC;AAEDF,aAAa,CAACuC,MAAM,GAAG,MAAOf,EAAE,IAAK;EACnC,MAAMtB,EAAE,GAAG,MAAMR,IAAI,CAACS,IAAI,CAACqC,MAAM,CAAC;IAAE7B,MAAM,EAAE,MAAM;IAAEgB,YAAY,EAAE,MAAM;IAAED,KAAK,EAAG,IAAGF,EAAG;EAAE,CAAC,CAAC;EAC5F,OAAOtB,EAAE;AACX,CAAC;AAED,eAAeF,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}